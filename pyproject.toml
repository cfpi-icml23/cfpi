# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]

[tool.poetry]
authors = ["ezhang7423 <ete@ucsb.edu>", "Ji4chenLi <jiachen_li@ucsb.edu>"]
description = "Offline Reinforcement Learning with Closed-Form Policy Improvement Operators"
homepage = "https://github.com/ezhang7423/cfpi"
license = "MIT"
name = "cfpi"
readme = "README.md"
repository = "https://github.com/ezhang7423/cfpi"
version = "0.1.0"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [
  "offline-rl",
  "rl",
  "reinforcement-learning",
  "closed-form",
  "deep learning",
  "deep-rl",
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"cfpi" = "cfpi.__main__:app"

[tool.poetry.dependencies]
python = "~3.8"

cloudpickle = "^2.2.1"
cvxpy = "^1.3.2"
d4rl = {git = "https://github.com/ezhang7423/d4rl-installable.git"}
ezjaxtyping = "^0.2.20"
eztils = {extras = ["torch"], version = "^0.4.73"}
gitpython = "^3.1.31"
gtimer = "^1.0.0b5"
gym = {extras = ["all"], version = "0.23.1"}
matplotlib = "^3.7.1"
mujoco = "^2.2.0"
numpy = "^1.21.6"
patchelf = "^0.17.2.1"
portalocker = "^2.7.0"
pydantic = "^1.9.1"
pygame = "^2.1.0"
pytest = "7.0.1"
rich = "^13.4.2"
swig = "^4.1.1"
tensorboardx = "^2.6.1"
torch = "^2.0.1"
torchtyping = "^0.1.4"
torchvision = "^0.15.2"
tqdm = "^4.65.0"
typer = {extras = ["all"], version = "^0.9.0"}
types-python-dateutil = "^2.8.19.13"
types-setuptools = "^68.0.0.1"
wandb = "^0.15.5"

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = {version = "22.3.0", allow-prereleases = true}
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
darglint = "^1.8.1"
ipdb = "^0.13.13"
ipython = "^7.34.0"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
pydocstyle = "^6.1.1"
pyflyby = "^1.8.4"
pylint = "^2.11.1"
pytest-cov = "^3.0.0"
pytest-html = "^3.1.1"
pyupgrade = "^2.29.1"
safety = "^2.3.5"

[tool.black]
# https://github.com/psf/black
color = true
line-length = 88
target-version = ["py38"]

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
line_length = 88
py_version = 38

color_output = true
include_trailing_comma = true
indent = 4
known_typing = [
  "typing",
  "types",
  "typing_extensions",
  "mypy",
  "mypy_extensions",
]
multi_line_output = 3
profile = "black"
sections = [
  "FUTURE",
  "TYPING",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
color_output = true
pretty = true
python_version = 3.8
show_traceback = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
doctest_optionflags = [
  "NUMBER",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
]
norecursedirs = [
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "cfpi"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
